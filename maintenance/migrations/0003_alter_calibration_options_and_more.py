# Generated by Django 5.1.2 on 2024-11-18 15:00

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('maintenance', '0002_alter_calibration_technician_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='calibration',
            options={'permissions': [('can_view_calibration', 'Can view Calibrations'), ('can_add_calibration', 'Can add Calibrations'), ('can_change_calibration', 'Can change Calibrations'), ('can_delete_calibration', 'Can delete Calibrations')], 'verbose_name': 'Calibration', 'verbose_name_plural': 'Calibrations'},
        ),
        migrations.AlterModelOptions(
            name='calibrationstandard',
            options={'permissions': [('can_view_calibrationstandard', 'Can view Calibration Standards'), ('can_add_calibrationstandard', 'Can add Calibration Standards'), ('can_change_calibrationstandard', 'Can change Calibration Standards'), ('can_delete_calibrationstandard', 'Can delete Calibration Standards')], 'verbose_name': 'Calibration Standard', 'verbose_name_plural': 'Calibration Standards'},
        ),
        migrations.AlterModelOptions(
            name='dailyverification',
            options={'permissions': [('can_view_dailyverification', 'Can view Daily Verifications'), ('can_add_dailyverification', 'Can add Daily Verifications'), ('can_change_dailyverification', 'Can change Daily Verifications'), ('can_delete_dailyverification', 'Can delete Daily Verifications')], 'verbose_name': 'Daily Verification', 'verbose_name_plural': 'Daily Verifications'},
        ),
        migrations.AlterModelOptions(
            name='maintenance',
            options={'permissions': [('can_view_maintenance', 'Can view Maintenances'), ('can_add_maintenance', 'Can add Maintenances'), ('can_change_maintenance', 'Can change Maintenances'), ('can_delete_maintenance', 'Can delete Maintenances')], 'verbose_name': 'Maintenance', 'verbose_name_plural': 'Maintenances'},
        ),
        migrations.AlterModelOptions(
            name='standardoperatingprocedure',
            options={'permissions': [('can_view_sop', 'Can view SOPs'), ('can_add_sop', 'Can add SOPs'), ('can_change_sop', 'Can change SOPs'), ('can_delete_sop', 'Can delete SOPs')], 'verbose_name': 'Standard Operating Procedure', 'verbose_name_plural': 'Standard Operating Procedures'},
        ),
        migrations.AlterModelOptions(
            name='training',
            options={'permissions': [('can_view_training', 'Can view Trainings'), ('can_add_training', 'Can add Trainings'), ('can_change_training', 'Can change Trainings'), ('can_delete_training', 'Can delete Trainings')], 'verbose_name': 'Training', 'verbose_name_plural': 'Trainings'},
        ),
        migrations.AlterField(
            model_name='calibrationstandard',
            name='serial_number',
            field=models.CharField(help_text='Unique serial number for the calibration standard', max_length=100, unique=True),
        ),
        migrations.CreateModel(
            name='HistoricalCalibrationStandard',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('serial_number', models.CharField(db_index=True, help_text='Unique serial number for the calibration standard', max_length=100)),
                ('last_calibration_date', models.DateField(help_text='Last calibration date of the standard')),
                ('certification_body', models.CharField(help_text='Certification organization', max_length=255)),
                ('acceptable_error_margin', models.DecimalField(decimal_places=5, help_text='Acceptable error margin for the equipment', max_digits=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Calibration Standard',
                'verbose_name_plural': 'historical Calibration Standards',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDailyVerification',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Verification date and time')),
                ('measurements', models.JSONField(help_text='Measurements taken by the user')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='User who performed the verification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Daily Verification',
                'verbose_name_plural': 'historical Daily Verifications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStandardOperatingProcedure',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document', models.TextField(help_text='Standard Operating Procedure (SOP) document', max_length=100)),
                ('description', models.TextField(blank=True, help_text='SOP description', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Standard Operating Procedure',
                'verbose_name_plural': 'historical Standard Operating Procedures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
